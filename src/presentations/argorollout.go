package presentations

import "time"

//go:generate easytags $GOFILE json

// AutoGenerated is the main structure containing a list of Rollouts.
type RolloutList struct {
	Rollouts []Rollout `json:"rollouts"`
}

// Rollout holds metadata, status, and other details about each rollout.
type Rollout struct {
	ObjectMeta  ObjectMeta   `json:"objectMeta"`
	Status      string       `json:"status"`
	Message     string       `json:"message"`
	Strategy    string       `json:"strategy"`
	Ready       int          `json:"ready"`
	Current     int          `json:"current"`
	Desired     int          `json:"desired"`
	Updated     int          `json:"updated"`
	Available   int          `json:"available"`
	RestartedAt string       `json:"restartedAt"`
	Generation  string       `json:"generation"`
	ReplicaSet  []ReplicaSet `json:"replicaSets"`
}

// Rollout holds metadata, status, and other details about each rollout.
type RolloutDetail struct {
	ObjectMeta  ObjectMeta   `json:"objectMeta"`
	Status      string       `json:"status"`
	Message     string       `json:"message"`
	Icon        string       `json:"icon"`
	Strategy    string       `json:"strategy"`
	Ready       int          `json:"ready"`
	Current     int          `json:"current"`
	Desired     int          `json:"desired"`
	Updated     int          `json:"updated"`
	Available   int          `json:"available"`
	RestartedAt string       `json:"restartedAt"`
	Generation  string       `json:"generation"`
	ReplicaSets []ReplicaSet `json:"replicaSets"`
	Containers  []Container  `json:"containers"`
}

// ObjectMeta contains metadata fields for Kubernetes objects.
type ObjectMeta struct {
	Name              string      `json:"name"`
	Namespace         string      `json:"namespace"`
	UID               string      `json:"uid"`
	ResourceVersion   string      `json:"resourceVersion,omitempty"`
	CreationTimestamp time.Time   `json:"creationTimestamp"`
	Labels            Labels      `json:"labels"`
	Annotations       Annotations `json:"annotations"`
}

// Labels holds label metadata.
type Labels struct {
	AppKubernetesIoManagedBy string `json:"app.kubernetes.io/managed-by"`
}

// Annotations holds annotation metadata.
type Annotations struct {
	MetaHelmShReleaseName      string `json:"meta.helm.sh/release-name"`
	MetaHelmShReleaseNamespace string `json:"meta.helm.sh/release-namespace"`
	RolloutArgoprojIoRevision  string `json:"rollout.argoproj.io/revision"`
}

// ReplicaSet holds details about each replica set.
type ReplicaSet struct {
	ObjectMeta ObjectMeta `json:"objectMeta"`
	Status     string     `json:"status"`
	Icon       string     `json:"icon"`
	Revision   int        `json:"revision"`
	Preview    bool       `json:"preview,omitempty"`
	Replicas   int        `json:"replicas,omitempty"`
	Available  int        `json:"available,omitempty"`
	Images     []string   `json:"images"`
	Pods       []Pod      `json:"pods,omitempty"`
	Stable     bool       `json:"stable,omitempty"`
	Active     bool       `json:"active,omitempty"`
}

// Pod holds details about individual pods within a replica set.
type Pod struct {
	ObjectMeta ObjectMeta `json:"objectMeta"`
	Status     string     `json:"status"`
	Icon       string     `json:"icon"`
	Ready      string     `json:"ready"`
}

// Container holds details about individual containers in a rollout.
type Container struct {
	Name  string `json:"name"`
	Image string `json:"image"`
}

type PromoteArgoResponse struct {
	Metadata struct {
		Name              string    `json:"name"`
		Namespace         string    `json:"namespace"`
		UID               string    `json:"uid"`
		ResourceVersion   string    `json:"resourceVersion"`
		Generation        int       `json:"generation"`
		CreationTimestamp time.Time `json:"creationTimestamp"`
		Labels            struct {
			AppKubernetesIoManagedBy string `json:"app.kubernetes.io/managed-by"`
		} `json:"labels"`
		Annotations struct {
			MetaHelmShReleaseName      string `json:"meta.helm.sh/release-name"`
			MetaHelmShReleaseNamespace string `json:"meta.helm.sh/release-namespace"`
			RolloutArgoprojIoRevision  string `json:"rollout.argoproj.io/revision"`
		} `json:"annotations"`
		ManagedFields []struct {
			Manager    string    `json:"manager"`
			Operation  string    `json:"operation"`
			APIVersion string    `json:"apiVersion"`
			Time       time.Time `json:"time"`
			FieldsType string    `json:"fieldsType"`
			FieldsV1   struct {
				FMetadata struct {
					FAnnotations struct {
						NAMING_FAILED struct {
						} `json:"."`
						FMetaHelmShReleaseName struct {
						} `json:"f:meta.helm.sh/release-name"`
						FMetaHelmShReleaseNamespace struct {
						} `json:"f:meta.helm.sh/release-namespace"`
					} `json:"f:annotations"`
					FLabels struct {
						NAMING_FAILED struct {
						} `json:"."`
						FAppKubernetesIoManagedBy struct {
						} `json:"f:app.kubernetes.io/managed-by"`
					} `json:"f:labels"`
				} `json:"f:metadata"`
				FSpec struct {
					NAMING_FAILED struct {
					} `json:"."`
					FReplicas struct {
					} `json:"f:replicas"`
					FSelector struct {
					} `json:"f:selector"`
					FStrategy struct {
						NAMING_FAILED struct {
						} `json:"."`
						FBlueGreen struct {
							NAMING_FAILED struct {
							} `json:"."`
							FActiveService struct {
							} `json:"f:activeService"`
							FAutoPromotionEnabled struct {
							} `json:"f:autoPromotionEnabled"`
							FPreviewService struct {
							} `json:"f:previewService"`
							FScaleDownDelaySeconds struct {
							} `json:"f:scaleDownDelaySeconds"`
						} `json:"f:blueGreen"`
					} `json:"f:strategy"`
					FTemplate struct {
						NAMING_FAILED struct {
						} `json:"."`
						FMetadata struct {
							NAMING_FAILED struct {
							} `json:"."`
							FLabels struct {
								NAMING_FAILED struct {
								} `json:"."`
								FApp struct {
								} `json:"f:app"`
							} `json:"f:labels"`
						} `json:"f:metadata"`
						FSpec struct {
						} `json:"f:spec"`
					} `json:"f:template"`
				} `json:"f:spec"`
			} `json:"fieldsV1"`
			Subresource string `json:"subresource,omitempty"`
		} `json:"managedFields"`
	} `json:"metadata"`
	Spec struct {
		Replicas int `json:"replicas"`
		Selector struct {
			MatchLabels struct {
				App string `json:"app"`
			} `json:"matchLabels"`
		} `json:"selector"`
		Template struct {
			Metadata struct {
				CreationTimestamp interface{} `json:"creationTimestamp"`
				Labels            struct {
					App string `json:"app"`
				} `json:"labels"`
			} `json:"metadata"`
			Spec struct {
				Containers []struct {
					Name  string `json:"name"`
					Image string `json:"image"`
					Ports []struct {
						Name          string `json:"name"`
						ContainerPort int    `json:"containerPort"`
						Protocol      string `json:"protocol"`
					} `json:"ports"`
					Resources struct {
						Limits struct {
							CPU    string `json:"cpu"`
							Memory string `json:"memory"`
						} `json:"limits"`
						Requests struct {
							CPU    string `json:"cpu"`
							Memory string `json:"memory"`
						} `json:"requests"`
					} `json:"resources"`
				} `json:"containers"`
			} `json:"spec"`
		} `json:"template"`
		Strategy struct {
			BlueGreen struct {
				ActiveService         string `json:"activeService"`
				PreviewService        string `json:"previewService"`
				AutoPromotionEnabled  bool   `json:"autoPromotionEnabled"`
				ScaleDownDelaySeconds int    `json:"scaleDownDelaySeconds"`
			} `json:"blueGreen"`
		} `json:"strategy"`
	} `json:"spec"`
	Status struct {
		PauseConditions []struct {
			Reason    string    `json:"reason"`
			StartTime time.Time `json:"startTime"`
		} `json:"pauseConditions"`
		ControllerPause    bool   `json:"controllerPause"`
		CurrentPodHash     string `json:"currentPodHash"`
		Replicas           int    `json:"replicas"`
		UpdatedReplicas    int    `json:"updatedReplicas"`
		ReadyReplicas      int    `json:"readyReplicas"`
		AvailableReplicas  int    `json:"availableReplicas"`
		ObservedGeneration string `json:"observedGeneration"`
		Conditions         []struct {
			Type               string    `json:"type"`
			Status             string    `json:"status"`
			LastUpdateTime     time.Time `json:"lastUpdateTime"`
			LastTransitionTime time.Time `json:"lastTransitionTime"`
			Reason             string    `json:"reason"`
			Message            string    `json:"message"`
		} `json:"conditions"`
		Canary struct {
		} `json:"canary"`
		BlueGreen struct {
			PreviewSelector string `json:"previewSelector"`
			ActiveSelector  string `json:"activeSelector"`
		} `json:"blueGreen"`
		HPAReplicas int    `json:"HPAReplicas"`
		Selector    string `json:"selector"`
		StableRS    string `json:"stableRS"`
		PromoteFull bool   `json:"promoteFull"`
		Phase       string `json:"phase"`
		Message     string `json:"message"`
	} `json:"status"`
}
